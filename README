This project is currently WIP and version numbering has yet to be introduced.

=============================================

Exported methods required by plugins:

getURLParts():
- returns an array containing all first subdirectories of incoming URLs handled by the plugin

publicSubFolders():
- returns folders the plugin requires access to within the public/ folder.

getPanelItems():
# only the url key is necessarily required in the object, or the link will default to "#".
- returns an array of items for the admin panel in the format {name: "", url: "", imagepath: ""}

getIndexItems(resources):
#each object represents a category, the items represent the individual items. only the url key is necessarily required.
+ resources object from the main database object
- returns an object filled with arrays of items for the admin panel in the format {name: "", url: "", imagepath: ""}


handleURL(url, admin, res, req, nameList, database):
# handles URL access
+ url: array of the full url split by directories, as in String.split("/");
+ admin: boolean if the user has admin access
+ req: the request as given to the server function by the http.Server object
+ res: the response as given to the server function by the http.Server object
+ nameList: list of names blocked by the system or plugins
+ database: the main database object

loadDatabase(database):
# sets up the database on server start, loading external files into the resources and library items of the database.
+ database: the main database object

=============================================

This project requires ImageMagick to convert uploaded pdfs for viewing in the BookReader tool.

Used plugins/libraries:
node.js by Ryan Dahl
js-sha512 (JavaScript library) by Yi-Cyuan Chen
jquery by the JS Foundation

for the archiver plugin:
formidable (node module) by felixge
pdf-image (node module) by mooz
Internet Archive BookReader (JavaScript library)